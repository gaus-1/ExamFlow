#!/usr/bin/env python
"""
–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Ollama
"""
import os
import sys
import django

def cleanup_and_init_ollama():
    """–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Ollama"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Ollama...")

    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'examflow_project.settings')
        django.setup()
        print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

        from ai.models import AiRequest, AiResponse, AiLimit, AiProvider

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
        deleted_requests = AiRequest.objects.all().delete()  # type: ignore
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {deleted_requests[0]}")

        deleted_responses = AiResponse.objects.all().delete()  # type: ignore
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {deleted_responses[0]}")

        deleted_limits = AiLimit.objects.all().delete()  # type: ignore
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ª–∏–º–∏—Ç–æ–≤: {deleted_limits[0]}")

        deleted_providers = AiProvider.objects.all().delete()  # type: ignore
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: {deleted_providers[0]}")

        # –°–æ–∑–¥–∞–µ–º Ollama –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        ollama_provider = AiProvider.objects.create(  # type: ignore
            name="Ollama",
            provider_type="ollama",
            is_active=True,
            priority=1,
            daily_limit=1000  # –í—ã—Å–æ–∫–∏–π –ª–∏–º–∏—Ç –¥–ª—è Ollama
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω Ollama –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {ollama_provider.name}")

        # –°–æ–∑–¥–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –≥–æ—Å—Ç–µ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        from django.utils import timezone
        from datetime import timedelta

        # –õ–∏–º–∏—Ç –¥–ª—è –≥–æ—Å—Ç–µ–π
        guest_limit = AiLimit.objects.create(  # type: ignore
            limit_type="daily",
            max_limit=50,  # 50 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å –¥–ª—è –≥–æ—Å—Ç–µ–π
            current_usage=0,
            reset_date=timezone.now() + timedelta(days=1)
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏–º–∏—Ç –¥–ª—è –≥–æ—Å—Ç–µ–π: {guest_limit.max_limit}/–¥–µ–Ω—å")

        # –õ–∏–º–∏—Ç –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_limit = AiLimit.objects.create(  # type: ignore
            limit_type="daily",
            max_limit=200,  # 200 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            current_usage=0,
            reset_date=timezone.now() + timedelta(days=1)
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏–º–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_limit.max_limit}/–¥–µ–Ω—å")

        print("üéâ –û—á–∏—Å—Ç–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        print("\nüìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"‚Ä¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {ollama_provider.name} ({ollama_provider.provider_type})")
        print(f"‚Ä¢ –õ–∏–º–∏—Ç –≥–æ—Å—Ç–µ–π: {guest_limit.max_limit}/–¥–µ–Ω—å")
        print(f"‚Ä¢ –õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_limit.max_limit}/–¥–µ–Ω—å")
        print(f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if ollama_provider.is_active else '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = cleanup_and_init_ollama()
    if success:
        print("\nüéâ Ollama —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama —Å https://ollama.ai/download")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ollama run llama3.1:8b")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä")
        print("4. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ò–ò –Ω–∞ —Å–∞–π—Ç–µ!")
    else:
        print("\nüí• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
