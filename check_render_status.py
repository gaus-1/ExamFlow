#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Render —Å–µ—Ä–≤–∏—Å–∞
"""

import requests
from datetime import datetime

def check_render_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render"""
    
    # URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    service_urls = [
        "https://examflow.onrender.com",
        "https://examflow-web.onrender.com", 
        "https://examflow-app.onrender.com"
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Render —Å–µ—Ä–≤–∏—Å–æ–≤...")
    print(f"‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("-" * 50)
    
    for url in service_urls:
        try:
            print(f"üåê –ü—Ä–æ–≤–µ—Ä—è—é: {url}")
            response = requests.get(url, timeout=10)
            
            if response.status_code == 200:
                print("‚úÖ –°—Ç–∞—Ç—É—Å: 200 OK - –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print(f"üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
            elif response.status_code == 404:
                print("‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: 404 - –°–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except requests.exceptions.Timeout:
            print("‚è∞ –¢–∞–π–º–∞—É—Ç - —Å–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        except requests.exceptions.ConnectionError:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("-" * 30)

def check_github_repo():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã –≤ GitHub"""
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç —á–µ—Ä–µ–∑ GitHub API
        api_url = "https://api.github.com/repos/gaus-1/ExamFlow/commits"
        response = requests.get(api_url, timeout=10)
        
        if response.status_code == 200:
            commits = response.json()
            if commits:
                latest_commit = commits[0]
                print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: {latest_commit['commit']['message']}")
                print(f"üìÖ –î–∞—Ç–∞: {latest_commit['commit']['author']['date']}")
                print(f"üîó SHA: {latest_commit['sha'][:8]}")
            else:
                print("‚ö†Ô∏è  –ö–æ–º–º–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ GitHub API: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ GitHub: {e}")

if __name__ == "__main__":
    check_render_service()
    check_github_repo()
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Render Dashboard: https://dashboard.render.com")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–∏—Å –Ω–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
    print("4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å")
