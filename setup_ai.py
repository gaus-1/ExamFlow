#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –º–æ–¥—É–ª—è ExamFlow
"""
import os
import sys
import subprocess
import django

def setup_ai():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ò–ò –º–æ–¥—É–ª—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ò–ò –º–æ–¥—É–ª—è ExamFlow...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['USE_SQLITE'] = 'False'
    os.environ['DATABASE_URL'] = 'postgresql://postgres:Slava2402@localhost:5432/examflow_db'
    os.environ['DEBUG'] = 'True'
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'examflow_project.settings')
    django.setup()
    
    print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã Django
    commands = [
        ['python', 'manage.py', 'makemigrations', 'ai'],
        ['python', 'manage.py', 'migrate'],
        ['python', 'manage.py', 'check']
    ]
    
    for cmd in commands:
        print(f"\nüîß –í—ã–ø–æ–ª–Ω—è—é: {' '.join(cmd)}")
        try:
            result = subprocess.run(cmd, capture_output=True, text=True, cwd=os.getcwd())
            if result.stdout:
                print("üì§ –í—ã–≤–æ–¥:")
                print(result.stdout)
            if result.stderr:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∏:")
                print(result.stderr)
            if result.returncode == 0:
                print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º {result.returncode}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    setup_ai()
