# Generated by Django 4.2.7 on 2025-08-20 13:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserThemePreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('school', 'Школьник'), ('adult', 'Взрослый')], default='school', max_length=10, verbose_name='Выбранная тема')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Тема активна')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='theme_preference', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предпочтение по дизайну',
                'verbose_name_plural': 'Предпочтения по дизайну',
                'db_table': 'themes_user_theme_preference',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ThemeUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('school', 'Школьник'), ('adult', 'Взрослый')], max_length=10, verbose_name='Использованная тема')),
                ('session_duration', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(86400)], verbose_name='Продолжительность сессии (секунды)')),
                ('page_views', models.PositiveIntegerField(default=0, verbose_name='Количество просмотренных страниц')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theme_usage', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Использование темы',
                'verbose_name_plural': 'Использование тем',
                'db_table': 'themes_theme_usage',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ThemeCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('school', 'Школьник'), ('adult', 'Взрослый')], max_length=10, verbose_name='Базовая тема')),
                ('custom_colors', models.JSONField(blank=True, default=dict, verbose_name='Пользовательские цвета')),
                ('custom_fonts', models.JSONField(blank=True, default=dict, verbose_name='Пользовательские шрифты')),
                ('is_active', models.BooleanField(default=False, verbose_name='Пользовательские настройки активны')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theme_customizations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользовательская настройка темы',
                'verbose_name_plural': 'Пользовательские настройки тем',
                'db_table': 'themes_theme_customization',
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'theme')},
            },
        ),
    ]
