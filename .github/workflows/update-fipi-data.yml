name: üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –§–ò–ü–ò –∏ –†–µ—à—É–ï–ì–≠

on:
  schedule:
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 3:00 UTC (6:00 –ú–°–ö)
    - cron: '0 3 * * *'
  
  workflow_dispatch:
    inputs:
      description:
        description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –§–ò–ü–ò –∏ –†–µ—à—É–ï–ì–≠'
        required: false
        default: '–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4
        
      - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        run: |
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É SQLite –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          python manage.py makemigrations
          python manage.py migrate
          
      - name: üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        run: |
          python manage.py load_fipi_data --force
          
      - name: üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        run: |
          python manage.py shell -c "
          from learning.models import Subject, Task, Topic
          print(f'‚úÖ –ü—Ä–µ–¥–º–µ—Ç–æ–≤: {Subject.objects.count()}')
          print(f'‚úÖ –¢–µ–º: {Topic.objects.count()}')
          print(f'‚úÖ –ó–∞–¥–∞–Ω–∏–π: {Task.objects.count()}')
          "
          
      - name: üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        run: |
          echo "# üìä –û—Ç—á–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –§–ò–ü–ò –∏ –†–µ—à—É–ï–ì–≠" > UPDATE_REPORT.md
          echo "" >> UPDATE_REPORT.md
          echo "**–î–∞—Ç–∞:** $(date)" >> UPDATE_REPORT.md
          echo "**–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** $(date -u)" >> UPDATE_REPORT.md
          echo "" >> UPDATE_REPORT.md
          
          python manage.py shell -c "
          from learning.models import Subject, Task, Topic
          with open('UPDATE_REPORT.md', 'a') as f:
              f.write(f'**–ü—Ä–µ–¥–º–µ—Ç–æ–≤:** {Subject.objects.count()}\n')
              f.write(f'**–¢–µ–º:** {Topic.objects.count()}\n')
              f.write(f'**–ó–∞–¥–∞–Ω–∏–π:** {Task.objects.count()}\n')
          "
          
      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
        run: |
          python manage.py shell -c "
          from learning.models import Subject, Task
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
          subjects = Subject.objects.all()
          print('üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:')
          for subject in subjects:
              task_count = Task.objects.filter(subject=subject).count()
              print(f'  {subject.name} ({subject.exam_type}): {task_count} –∑–∞–¥–∞–Ω–∏–π')
              
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏—è
          tasks = Task.objects.all()
          print(f'\nüìù –í—Å–µ–≥–æ –∑–∞–¥–∞–Ω–∏–π: {tasks.count()}')
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
          difficulties = {}
          for task in tasks:
              difficulties[task.difficulty] = difficulties.get(task.difficulty, 0) + 1
          
          print('üéØ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:')
          for diff, count in sorted(difficulties.items()):
              print(f'  –°–ª–æ–∂–Ω–æ—Å—Ç—å {diff}: {count} –∑–∞–¥–∞–Ω–∏–π')
          "
          
      - name: üì§ –ö–æ–º–º–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git add .
          
          # –ö–æ–º–º–∏—Ç–∏–º —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
          git commit -m "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –§–ò–ü–ò –∏ –†–µ—à—É–ï–ì–≠
          
          - –û–±–Ω–æ–≤–ª–µ–Ω–æ: $(date)
          - –ü—Ä–µ–¥–º–µ—Ç–æ–≤: $(python manage.py shell -c 'from learning.models import Subject; print(Subject.objects.count())')
          - –ó–∞–¥–∞–Ω–∏–π: $(python manage.py shell -c 'from learning.models import Task; print(Task.objects.count())')
          - –ò—Å—Ç–æ—á–Ω–∏–∫: GitHub Actions
          "
          
      - name: üöÄ –ü—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π
        run: |
          git push origin main
          
      - name: üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
          else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö!"
          fi
          
      - name: üóÇÔ∏è –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: fipi-update-report
          path: |
            UPDATE_REPORT.md
            logs/
            
  notify-success:
    needs: update-data
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        run: |
          echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –§–ò–ü–ò –∏ –†–µ—à—É–ï–ì–≠ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
          echo "üìä –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
          echo "üïê –í—Ä–µ–º—è: $(date)"
          
  notify-failure:
    needs: update-data
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
      - name: üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        run: |
          echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –§–ò–ü–ò –∏ –†–µ—à—É–ï–ì–≠!"
          echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
          echo "üïê –í—Ä–µ–º—è: $(date)"
