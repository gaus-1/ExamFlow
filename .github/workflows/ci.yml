name: CI - Lint & Django checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: examflow_project.settings
      # Используем SQLite в CI, чтобы не поднимать Postgres
      DATABASE_URL: sqlite:///./ci.sqlite3
      # Безопасные заглушки, чтобы импорт модулей не падал
      GEMINI_API_KEY: dummy-ci-key
      TELEGRAM_BOT_TOKEN: 000000:dummy
      SITE_URL: https://examflow.example

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential gcc libpq-dev

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Устанавливаем инструменты разработки (Ruff, mypy)
          python -m pip install ruff mypy

      - name: Flake8 (PEP8)
        run: |
          python -m pip install flake8
          # Базовая проверка основных модулей; допускаем длинные строки и спорные правила
          flake8 --max-line-length=120 --ignore=E501,W503,E203,F401 core/ learning/ examflow_project/ telegram_bot/

      - name: Ruff (soft)
        run: |
          # Мягкая проверка кодстайла Ruff (не падаем по ошибкам)
          ruff --version
          ruff check . || true

      - name: mypy (soft)
        continue-on-error: true
        run: |
          mypy --version
          mypy . || true

      - name: Django system check
        run: |
          python manage.py check --deploy --fail-level WARNING

      - name: Collect static (dry run)
        run: |
          python manage.py collectstatic --noinput --dry-run


