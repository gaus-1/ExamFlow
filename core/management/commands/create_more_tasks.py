"""
–°–æ–∑–¥–∞–µ—Ç –±–æ–ª—å—à–µ –∑–∞–¥–∞—á –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
"""

from django.core.management.base import BaseCommand
from learning.models import Subject, Task
import random


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞'

    def handle(self, *args, **options):
        self.stdout.write('üéØ –°–û–ó–î–ê–ù–ò–ï –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ó–ê–î–ê–ß')
        self.stdout.write('=' * 50)

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
        try:
            math_subjects = Subject.objects.filter(name__icontains='–º–∞—Ç–µ–º–∞—Ç–∏–∫')  # type: ignore
            russian_subjects = Subject.objects.filter(name__icontains='—Ä—É—Å—Å–∫')  # type: ignore
            
            self.stdout.write(f'–ù–∞–π–¥–µ–Ω–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {math_subjects.count()}')
            self.stdout.write(f'–ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞: {russian_subjects.count()}')
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ
            math_tasks = [
                {
                    'title': '–ù–∞–π–¥–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–∏ f(x) = x¬≥ + 2x¬≤ - 5x + 1',
                    'description': '–í—ã—á–∏—Å–ª–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–∏ f(x) = x¬≥ + 2x¬≤ - 5x + 1',
                    'answer': 'f\'(x) = 3x¬≤ + 4x - 5',
                    'difficulty': 3
                },
                {
                    'title': '–†–µ—à–∏—Ç–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ 2x + 3 > 7',
                    'description': '–ù–∞–π–¥–∏—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–∏–π –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ 2x + 3 > 7',
                    'answer': 'x > 2',
                    'difficulty': 1
                },
                {
                    'title': '–ù–∞–π–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ 3, 4, 5',
                    'description': '–í—ã—á–∏—Å–ª–∏—Ç–µ –ø–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ a=3, b=4, c=5',
                    'answer': '6',
                    'difficulty': 2
                },
                {
                    'title': '–£–ø—Ä–æ—Å—Ç–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (x + 2)¬≤ - (x - 1)¬≤',
                    'description': '–£–ø—Ä–æ—Å—Ç–∏—Ç–µ –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (x + 2)¬≤ - (x - 1)¬≤',
                    'answer': '6x + 3',
                    'difficulty': 2
                },
                {
                    'title': '–ù–∞–π–¥–∏—Ç–µ –∫–æ—Ä–Ω–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è x¬≤ - 7x + 12 = 0',
                    'description': '–†–µ—à–∏—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ x¬≤ - 7x + 12 = 0',
                    'answer': 'x‚ÇÅ = 3, x‚ÇÇ = 4',
                    'difficulty': 2
                }
            ]
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É
            russian_tasks = [
                {
                    'title': '–ù–∞–π–¥–∏—Ç–µ –¥–µ–µ–ø—Ä–∏—á–∞—Å—Ç–Ω—ã–π –æ–±–æ—Ä–æ—Ç –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏',
                    'description': '–í –∫–∞–∫–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –µ—Å—Ç—å –¥–µ–µ–ø—Ä–∏—á–∞—Å—Ç–Ω—ã–π –æ–±–æ—Ä–æ—Ç?\n1) –ß–∏—Ç–∞—è –∫–Ω–∏–≥—É, –æ–Ω –¥–µ–ª–∞–ª –∑–∞–º–µ—Ç–∫–∏.\n2) –ü—Ä–æ—á–∏—Ç–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ –ª–µ–∂–∞–ª–∞ –Ω–∞ —Å—Ç–æ–ª–µ.\n3) –û–Ω —á–∏—Ç–∞–ª –∫–Ω–∏–≥—É –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ.\n4) –ö–Ω–∏–≥–∞ –±—ã–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–∞ –±—ã—Å—Ç—Ä–æ.',
                    'answer': '1',
                    'difficulty': 2
                },
                {
                    'title': '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–∏–ø —Å–∫–∞–∑—É–µ–º–æ–≥–æ',
                    'description': '–ö–∞–∫–æ–π —Ç–∏–ø —Å–∫–∞–∑—É–µ–º–æ–≥–æ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ "–û–Ω —Å—Ç–∞–ª –≤—Ä–∞—á–æ–º"?',
                    'answer': '–°–æ—Å—Ç–∞–≤–Ω–æ–µ –∏–º–µ–Ω–Ω–æ–µ —Å–∫–∞–∑—É–µ–º–æ–µ',
                    'difficulty': 3
                },
                {
                    'title': '–ù–∞–π–¥–∏—Ç–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É',
                    'description': '–í –∫–∞–∫–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –µ—Å—Ç—å –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞?\n1) –ë–ª–∞–≥–æ–¥–∞—Ä—è –¥–æ–∂–¥—é —É—Ä–æ–∂–∞–π –±—ã–ª —Ö–æ—Ä–æ—à–∏–º.\n2) –°–æ–≥–ª–∞—Å–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ø–æ–µ–∑–¥ –ø—Ä–∏–±—ã–≤–∞–µ—Ç –≤ 15:00.\n3) –ü–æ –ø—Ä–∏–µ–∑–¥—É –≤ –≥–æ—Ä–æ–¥ –º—ã –ø–æ—à–ª–∏ –≤ –º—É–∑–µ–π.\n4) –í–æ–ø—Ä–µ–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑—É –ø–æ–≥–æ–¥–∞ –±—ã–ª–∞ —Å–æ–ª–Ω–µ—á–Ω–æ–π.',
                    'answer': '3',
                    'difficulty': 3
                },
                {
                    'title': '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–ø—Ä—è–∂–µ–Ω–∏–µ –≥–ª–∞–≥–æ–ª–∞',
                    'description': '–ö –∫–∞–∫–æ–º—É —Å–ø—Ä—è–∂–µ–Ω–∏—é –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≥–ª–∞–≥–æ–ª "—Å—Ç—Ä–æ–∏—Ç—å"?',
                    'answer': 'II —Å–ø—Ä—è–∂–µ–Ω–∏–µ',
                    'difficulty': 2
                },
                {
                    'title': '–†–∞—Å—Å—Ç–∞–≤—å—Ç–µ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è',
                    'description': '–†–∞—Å—Å—Ç–∞–≤—å—Ç–µ –∑–∞–ø—è—Ç—ã–µ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏: "–ö–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∏–ª–∞ –≤–µ—Å–Ω–∞ –ø—Ç–∏—Ü—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ —Ç–µ–ø–ª—ã—Ö —Å—Ç—Ä–∞–Ω"',
                    'answer': '–ö–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∏–ª–∞ –≤–µ—Å–Ω–∞, –ø—Ç–∏—Ü—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ —Ç–µ–ø–ª—ã—Ö —Å—Ç—Ä–∞–Ω.',
                    'difficulty': 2
                }
            ]
            
            created_count = 0
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
            for subject in math_subjects:
                for task_data in math_tasks:
                    task, created = Task.objects.get_or_create(  # type: ignore
                        title=task_data['title'],
                        subject=subject,
                        defaults=task_data
                    )
                    if created:
                        created_count += 1
                        
                self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–¥–∞—á –¥–ª—è {subject.name}: {len(math_tasks)}')
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
            for subject in russian_subjects:
                for task_data in russian_tasks:
                    task, created = Task.objects.get_or_create(  # type: ignore
                        title=task_data['title'],
                        subject=subject,
                        defaults=task_data
                    )
                    if created:
                        created_count += 1
                        
                self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–¥–∞—á –¥–ª—è {subject.name}: {len(russian_tasks)}')
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            total_tasks = Task.objects.count()  # type: ignore
            self.stdout.write('=' * 50)
            self.stdout.write(f'üéâ –°–û–ó–î–ê–ù–û –ù–û–í–´–• –ó–ê–î–ê–ß: {created_count}')
            self.stdout.write(f'üìä –í–°–ï–ì–û –ó–ê–î–ê–ß –í –ë–ê–ó–ï: {total_tasks}')
            self.stdout.write('‚úÖ –ó–∞–¥–∞—á–∏ –≥–æ—Ç–æ–≤—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!')
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {e}'))  # type: ignore
