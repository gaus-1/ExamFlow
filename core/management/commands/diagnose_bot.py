"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Telegram –±–æ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
"""

from django.core.management.base import BaseCommand
from django.conf import settings
import logging
import requests

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = '–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram –±–æ—Ç–∞'

    def handle(self, *args, **options):
        self.stdout.write('üîç –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TELEGRAM –ë–û–¢–ê')
        self.stdout.write('=' * 60)

        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.stdout.write('\nüìã 1. –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:')
        token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)
        if token:
            self.stdout.write('   ‚úÖ TELEGRAM_BOT_TOKEN: {token[:10]}...')
        else:
            self.stdout.write('   ‚ùå TELEGRAM_BOT_TOKEN: –ù–ï –ù–ê–ô–î–ï–ù')
            return

        site_url = getattr(settings, 'SITE_URL', None)
        if site_url:
            self.stdout.write('   ‚úÖ SITE_URL: {site_url}')
        else:
            self.stdout.write('   ‚ùå SITE_URL: –ù–ï –ù–ê–ô–î–ï–ù')
            return

        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        self.stdout.write('\nüóÑÔ∏è 2. –ë–ê–ó–ê –î–ê–ù–ù–´–•:')
        try:
            from django.db import connection
            with connection.cursor() as cursor:
                cursor.execute("SELECT 1")
                cursor.fetchone()
            self.stdout.write('   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞')
        except Exception as e:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}')
            return

        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
        self.stdout.write('\nü§ñ 3. –°–û–ó–î–ê–ù–ò–ï –ë–û–¢–ê:')
        try:
            from telegram_bot.bot_main import get_bot
            bot = get_bot()
            if bot:
                self.stdout.write('   ‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω')
            else:
                self.stdout.write('   ‚ùå –ë–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω')
                return
        except Exception as e:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}')
            return

        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –±–æ—Ç–∞
        self.stdout.write('\nüåê 4. API –ë–û–¢–ê:')
        try:
            import asyncio
            bot_info = asyncio.run(bot.get_me())
            self.stdout.write(
                '   ‚úÖ –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: @{bot_info.username} (ID: {bot_info.id})')
        except Exception as e:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ API –±–æ—Ç–∞: {e}')
            return

        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        self.stdout.write('\nüîó 5. WEBHOOK:')
        webhook_url = "{site_url}/bot/webhook/"
        self.stdout.write('   Webhook URL: {webhook_url}')

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
            response = requests.get(
                "https://api.telegram.org/bot{token}/getWebhookInfo")
            webhook_info = response.json()

            if webhook_info.get('ok'):
                current_url = webhook_info.get('result', {}).get('url', '')
                if current_url:
                    self.stdout.write('   ‚úÖ –¢–µ–∫—É—â–∏–π webhook: {current_url}')
                    if current_url == webhook_url:
                        self.stdout.write('   ‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
                    else:
                        self.stdout.write('   ‚ö†Ô∏è  Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–π URL')
                else:
                    self.stdout.write('   ‚ùå Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            else:
                self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è webhook: {webhook_info}')

        except Exception as e:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}')

        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å webhook endpoint
        self.stdout.write('\nüåê 6. –î–û–°–¢–£–ü–ù–û–°–¢–¨ WEBHOOK ENDPOINT:')
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint
            test_url = "{site_url}/bot/test/"
            response = requests.get(test_url, timeout=10)

            if response.status_code == 200:
                self.stdout.write(
                    '   ‚úÖ Webhook endpoint –¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}')
                try:
                    data = response.json()
                    self.stdout.write(
                        '   üìä –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}')
                except BaseException:
                    self.stdout.write('   üìä –û—Ç–≤–µ—Ç: {response.text[:200]}')
            else:
                self.stdout.write(
                    '   ‚ùå Webhook endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}')

        except requests.exceptions.ConnectionError:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å webhook endpoint')
        except Exception as e:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook endpoint: {e}')

        # 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
        self.stdout.write('\nüì§ 7. –¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø:')
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ExamFlow"
            response = requests.post(
                "https://api.telegram.org/bot{token}/sendMessage",
                json={
                    'chat_id': 123456789,  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π chat_id –¥–ª—è —Ç–µ—Å—Ç–∞
                    'text': test_message
                }
            )

            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    self.stdout.write('   ‚úÖ API –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç')
                else:
                    error_code = result.get('error_code', 'unknown')
                    if error_code == 400:  # Bad Request - –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ chat_id
                        self.stdout.write(
                            '   ‚úÖ API –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç (–æ—à–∏–±–∫–∞ 400 –æ–∂–∏–¥–∞–µ–º–∞)')
                    else:
                        self.stdout.write('   ‚ö†Ô∏è  API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –æ—à–∏–±–∫–∞: {result}')
            else:
                self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ API: HTTP {response.status_code}')

        except Exception as e:
            self.stdout.write('   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}')

        self.stdout.write('\n' + '=' * 60)
        self.stdout.write('üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê')

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        self.stdout.write('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:')
        if site_url and not site_url.startswith('https://'):
            self.stdout.write(
                '   ‚ö†Ô∏è  SITE_URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https:// –¥–ª—è webhook')
        if not token:
            self.stdout.write(
                '   ‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ Environment Variables')
        else:
            self.stdout.write('   ‚úÖ TELEGRAM_BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
