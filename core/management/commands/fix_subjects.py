"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
"""

from django.core.management.base import BaseCommand
from learning.models import Subject

class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç—ã - –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫'

    def handle(self, *args, **options):
        self.stdout.write('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã...')

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        Subject.objects.all().delete()  # type: ignore
        self.stdout.write('–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã')

        # –°–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        subjects_data = [
            {
                'name': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è)',
                'code': 'math_pro',
                'exam_type': '–ï–ì–≠',
                'description': '–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ï–ì–≠ - –∑–∞–¥–∞–Ω–∏—è 1-19',
                'icon': 'üìê',
                'is_primary': True,
                'is_archived': False,
            },
            {
                'name': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–Ω–µ–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è)',
                'code': 'math_base',
                'exam_type': '–ï–ì–≠',
                'description': '–ë–∞–∑–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ï–ì–≠ - –∑–∞–¥–∞–Ω–∏—è 1-20',
                'icon': 'üìä',
                'is_primary': True,
                'is_archived': False,
            },
            {
                'name': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–û–ì–≠)',
                'code': 'math_oge',
                'exam_type': '–û–ì–≠',
                'description': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –û–ì–≠ - –∑–∞–¥–∞–Ω–∏—è 1-26',
                'icon': 'üî¢',
                'is_primary': True,
                'is_archived': False,
            },
            {
                'name': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–ï–ì–≠)',
                'code': 'russian_ege',
                'exam_type': '–ï–ì–≠',
                'description': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –ï–ì–≠ - —Å–æ—á–∏–Ω–µ–Ω–∏–µ, —Ç–µ—Å—Ç—ã, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞',
                'icon': 'üìù',
                'is_primary': True,
                'is_archived': False,
            },
            {
                'name': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–û–ì–≠)',
                'code': 'russian_oge',
                'exam_type': '–û–ì–≠',
                'description': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –û–ì–≠ - –∏–∑–ª–æ–∂–µ–Ω–∏–µ, —Å–æ—á–∏–Ω–µ–Ω–∏–µ, —Ç–µ—Å—Ç—ã',
                'icon': 'üìñ',
                'is_primary': True,
                'is_archived': False,
            },
        ]

        for data in subjects_data:
            subject = Subject.objects.create(**data)  # type: ignore
            self.stdout.write(f'‚úì –°–æ–∑–¥–∞–Ω –ø—Ä–µ–¥–º–µ—Ç: {subject.name}')

        self.stdout.write(self.style.SUCCESS( # type: ignore
            '–ü—Ä–µ–¥–º–µ—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã! –¢–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.'))  # type: ignore
