from django.core.management.base import BaseCommand
from core.models import Subject, Task
import random


class Command(BaseCommand):
    help = "Загружает расширенную базу заданий по всем предметам"

    def add_arguments(self, parser):
        parser.add_argument(
            '--subject',
            type=str,
            help='Загрузить задания только для указанного предмета'
        )
        parser.add_argument(
            '--count',
            type=int,
            default=50,
            help='Количество заданий для каждого предмета (по умолчанию 50)'
        )

    def handle(self, *args, **options):
        subject_filter = options.get('subject')
        tasks_per_subject = options.get('count', 50)

        # Математика - задания
        math_tasks = [
            ("Решение квадратного уравнения", "Решите уравнение: x² - 5x + 6 = 0. Найдите сумму корней.", 2, "Ответ: 5"),
            ("Площадь треугольника", "В треугольнике со сторонами 3, 4, 5 найдите площадь.", 1, "Ответ: 6"),
            ("Производная функции", "Найдите производную функции f(x) = x³ - 2x² + x - 1", 3, "Ответ: 3x² - 4x + 1"),
            ("Интеграл", "Вычислите определённый интеграл ∫₀¹ x² dx", 3, "Ответ: 1/3"),
            ("Тригонометрическое уравнение", "Решите уравнение sin(x) = 1/2 на [0, 2π]", 3, "Ответ: π/6, 5π/6"),
            ("Логарифм", "Найдите значение log₂(8) + log₃(9)", 2, "Ответ: 5"),
            ("Система уравнений", "Решите систему: x + y = 5, x - y = 1", 2, "Ответ: x=3, y=2"),
            ("Геометрическая прогрессия", "Найдите сумму первых 5 членов прогрессии: 2, 6, 18, ...", 2, "Ответ: 242"),
            ("Векторы", "Найдите скалярное произведение векторов a(2,3) и b(1,4)", 2, "Ответ: 14"),
            ("Комбинаторика", "Сколько способов выбрать 3 человек из 10?", 2, "Ответ: 120"),
        ]

        # Физика - задания
        physics_tasks = [
            ("Закон Ома", "При напряжении 12 В сила тока равна 2 А. Найдите сопротивление.", 1, "Ответ: 6 Ом"),
            ("Кинематика", "Тело движется с ускорением 2 м/с². Путь за 5 с при v₀=0?", 2, "Ответ: 25 м"),
            ("Закон сохранения энергии", "Тело массой 2 кг падает с высоты 10 м. Найдите скорость у земли.", 2, "Ответ: 14 м/с"),
            ("Электричество", "Найдите общее сопротивление при последовательном соединении R₁=3 Ом, R₂=7 Ом", 1, "Ответ: 10 Ом"),
            ("Оптика", "Угол падения 30°, показатель преломления 1.5. Найдите угол преломления.", 3, "Ответ: 19.5°"),
            ("Термодинамика", "Газ нагрели от 300К до 600К при постоянном давлении. Во сколько раз изменился объём?", 2, "Ответ: в 2 раза"),
            ("Механика", "Найдите импульс тела массой 5 кг, движущегося со скоростью 10 м/с", 1, "Ответ: 50 кг⋅м/с"),
            ("Колебания", "Период колебаний математического маятника длиной 1 м равен:", 2, "Ответ: 2 с"),
            ("Магнетизм", "Сила Ампера на проводник длиной 0.5 м в поле 0.2 Тл при токе 3 А:", 2, "Ответ: 0.3 Н"),
            ("Ядерная физика", "При α-распаде ядра ²³⁸U образуется:", 3, "Ответ: ²³⁴Th"),
        ]

        # Русский язык - задания
        russian_tasks = [
            ("Орфография", "Вставьте пропущенные буквы: пр_красный, пр_одолеть", 1, "Ответ: прекрасный, преодолеть"),
            ("Пунктуация", "Расставьте знаки препинания: Солнце село и стало темно", 1, "Ответ: Солнце село, и стало темно."),
            ("Синтаксис", "Определите тип сказуемого в предложении: 'Он был учителем'", 2, "Ответ: составное именное"),
            ("Морфология", "Определите часть речи слова 'благодаря' в предложении", 2, "Ответ: предлог"),
            ("Стилистика", "К какому стилю относится текст научной статьи?", 1, "Ответ: научный"),
            ("Лексика", "Подберите синоним к слову 'огромный'", 1, "Ответ: гигантский"),
            ("Фонетика", "Сколько звуков в слове 'яблоко'?", 2, "Ответ: 7"),
            ("Словообразование", "Разберите по составу слово 'подснежник'", 2, "Ответ: под-снеж-ник"),
            ("Культура речи", "Поставьте ударение в слове 'каталог'", 1, "Ответ: каталОг"),
            ("Текст", "Определите тип связи предложений в тексте", 3, "Ответ: цепная/параллельная"),
        ]

        # Химия - задания
        chemistry_tasks = [
            ("Периодическая система", "Сколько электронов у атома кислорода?", 1, "Ответ: 8"),
            ("Химические связи", "Какая связь в молекуле H₂O?", 1, "Ответ: ковалентная полярная"),
            ("Реакции", "Уравняйте реакцию: H₂ + O₂ → H₂O", 2, "Ответ: 2H₂ + O₂ → 2H₂O"),
            ("Органика", "Формула метана:", 1, "Ответ: CH₄"),
            ("Растворы", "Найдите молярность 2M раствора NaCl объёмом 0.5 л", 2, "Ответ: 1 моль"),
            ("Электролиз", "Что выделяется на катоде при электролизе CuSO₄?", 2, "Ответ: медь"),
            ("Кислоты и основания", "pH раствора с [H⁺] = 10⁻³ моль/л равен:", 2, "Ответ: 3"),
            ("Окисление", "Степень окисления серы в SO₃:", 2, "Ответ: +6"),
            ("Термохимия", "Экзотермическая реакция - это реакция:", 2, "Ответ: с выделением тепла"),
            ("Скорость реакции", "При повышении температуры на 10°C скорость реакции:", 2, "Ответ: увеличивается в 2-4 раза"),
        ]

        # Биология - задания
        biology_tasks = [
            ("Клетка", "Органоид, отвечающий за синтез белка:", 1, "Ответ: рибосома"),
            ("Генетика", "У человека 46 хромосом. Сколько в гамете?", 1, "Ответ: 23"),
            ("Эволюция", "Автор теории естественного отбора:", 1, "Ответ: Чарльз Дарвин"),
            ("Экология", "Организмы, создающие органические вещества:", 1, "Ответ: продуценты"),
            ("Анатомия", "Сколько камер в сердце человека?", 1, "Ответ: 4"),
            ("Ботаника", "Процесс образования органических веществ на свету:", 1, "Ответ: фотосинтез"),
            ("Зоология", "К какому типу относятся дождевые черви?", 2, "Ответ: кольчатые черви"),
            ("Микробиология", "Бактерии размножаются путём:", 1, "Ответ: деления"),
            ("Физиология", "Где происходит газообмен в лёгких?", 2, "Ответ: в альвеолах"),
            ("Биохимия", "Мономер белков:", 1, "Ответ: аминокислота"),
        ]

        # История - задания
        history_tasks = [
            ("Древняя Русь", "В каком году произошло крещение Руси?", 1, "Ответ: 988"),
            ("Средневековье", "Кто возглавил восстание в Москве в 1662 году?", 2, "Ответ: медный бунт"),
            ("Петровские реформы", "В каком году была основана Санкт-Петербургская академия наук?", 2, "Ответ: 1724"),
            ("19 век", "Когда была отменена крепостное право в России?", 1, "Ответ: 1861"),
            ("Революция 1917", "Когда произошла Октябрьская революция по новому стилю?", 2, "Ответ: 7 ноября"),
            ("СССР", "В каком году был образован СССР?", 1, "Ответ: 1922"),
            ("ВОВ", "Когда началась Великая Отечественная война?", 1, "Ответ: 22 июня 1941"),
            ("Послевоенный период", "Кто был лидером СССР после Сталина?", 2, "Ответ: Хрущёв"),
            ("Перестройка", "Кто провозгласил политику перестройки?", 1, "Ответ: Горбачёв"),
            ("Современность", "В каком году распался СССР?", 1, "Ответ: 1991"),
        ]

        # Обществознание - задания
        social_tasks = [
            ("Человек", "Процесс становления личности называется:", 1, "Ответ: социализация"),
            ("Общество", "Основные сферы общества:", 2, "Ответ: экономическая, политическая, социальная, духовная"),
            ("Экономика", "Основной вопрос экономики:", 2, "Ответ: что, как и для кого производить"),
            ("Политика", "Форма правления в России:", 1, "Ответ: республика"),
            ("Право", "Высшая юридическая сила в РФ у:", 1, "Ответ: Конституции"),
            ("Семья", "Основная функция семьи:", 1, "Ответ: репродуктивная"),
            ("Образование", "Обязательное образование в РФ:", 1, "Ответ: основное общее (9 классов)"),
            ("Культура", "Совокупность материальных и духовных ценностей:", 1, "Ответ: культура"),
            ("Мораль", "Внутренний регулятор поведения:", 1, "Ответ: совесть"),
            ("Религия", "Вера в сверхъестественное:", 1, "Ответ: религия"),
        ]

        # Информатика - задания
        informatics_tasks = [
            ("Системы счисления", "Переведите 10 из десятичной в двоичную систему", 2, "Ответ: 1010"),
            ("Алгоритмы", "Алгоритм должен быть:", 1, "Ответ: понятным, точным, результативным"),
            ("Программирование", "Оператор цикла в Python:", 1, "Ответ: for, while"),
            ("Базы данных", "Язык запросов к БД:", 1, "Ответ: SQL"),
            ("Сети", "Протокол передачи веб-страниц:", 1, "Ответ: HTTP"),
            ("Логика", "Результат операции 1 AND 0:", 1, "Ответ: 0"),
            ("Кодирование", "1 байт содержит:", 1, "Ответ: 8 бит"),
            ("Файлы", "Расширение текстового файла:", 1, "Ответ: .txt"),
            ("Графика", "Единица измерения разрешения:", 1, "Ответ: пиксель"),
            ("Безопасность", "Программа для защиты от вирусов:", 1, "Ответ: антивирус"),
        ]

        subjects_tasks = {
            'Математика': math_tasks,
            'Физика': physics_tasks,
            'Русский язык': russian_tasks,
            'Химия': chemistry_tasks,
            'Биология': biology_tasks,
            'История': history_tasks,
            'Обществознание': social_tasks,
            'Информатика': informatics_tasks,
        }

        total_created = 0

        for subject_name, base_tasks in subjects_tasks.items():
            if subject_filter and subject_name != subject_filter:
                continue

            try:
                subject = Subject.objects.get(name=subject_name)
            except Subject.DoesNotExist:
                self.stdout.write(f"❌ Предмет {subject_name} не найден")
                continue

            created_for_subject = 0

            # Создаём базовые задания
            for title, description, difficulty, answer in base_tasks:
                task, created = Task.objects.get_or_create(
                    title=title,
                    subject=subject,
                    defaults={
                        'description': description,
                        'difficulty': difficulty,
                        'answer': answer
                    }
                )
                if created:
                    created_for_subject += 1

            # Генерируем дополнительные задания
            additional_count = max(0, tasks_per_subject - len(base_tasks))
            for i in range(additional_count):
                base_task = random.choice(base_tasks)
                title = f"{base_task[0]} - вариант {i+1}"
                description = f"Дополнительное задание по теме: {base_task[0].lower()}"
                difficulty = random.choice([1, 2, 3])

                task, created = Task.objects.get_or_create(
                    title=title,
                    subject=subject,
                    defaults={
                        'description': description,
                        'difficulty': difficulty,
                        'answer': f"Ответ к заданию {i+1}"
                    }
                )
                if created:
                    created_for_subject += 1

            total_created += created_for_subject
            self.stdout.write(
                f"✅ {subject_name}: создано {created_for_subject} заданий")

        self.stdout.write(
            self.style.SUCCESS(f"🎉 Всего создано {total_created} заданий!")
        )
