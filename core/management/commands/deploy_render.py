from django.core.management.base import BaseCommand
from django.db import connection
from django.db.utils import OperationalError
from learning.models import Subject, Topic, Task
from authentication.models import UserProfile

class Command(BaseCommand):
    help = '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π ExamFlow –Ω–∞ Render —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –º–∏–≥—Ä–∞—Ü–∏–π'

    def handle(self, *args, **options):
        self.stdout.write('üöÄ –î–ï–ü–õ–û–ô EXAMFLOW –ù–ê RENDER')
        self.stdout.write('=' * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if not self.check_database():
            self.stdout.write(self.style.ERROR('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'))
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        if not self.check_tables():
            self.stdout.write(self.style.ERROR('‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏'))
            return
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö
        self.create_sample_data()
        
        self.stdout.write('=' * 50)
        self.stdout.write(self.style.SUCCESS('üéâ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!'))
        self.stdout.write('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
        self.stdout.write('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã')
        self.stdout.write('‚úÖ –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω—ã')

    def check_database(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            with connection.cursor() as cursor:
                cursor.execute("SELECT 1")
                self.stdout.write(self.style.SUCCESS('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ'))
                return True
        except OperationalError as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}'))
            return False

    def check_tables(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            subject_count = Subject.objects.count()
            task_count = Task.objects.count()
            
            self.stdout.write(self.style.SUCCESS(f'‚úÖ –¢–∞–±–ª–∏—Ü–∞ Subject: {subject_count} –∑–∞–ø–∏—Å–µ–π'))
            self.stdout.write(self.style.SUCCESS(f'‚úÖ –¢–∞–±–ª–∏—Ü–∞ Task: {task_count} –∑–∞–ø–∏—Å–µ–π'))
            
            return True
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü: {e}'))
            return False

    def create_sample_data(self):
        """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã–µ"""
        try:
            if Subject.objects.count() == 0:
                self.stdout.write('üìö –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤...')
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
                subjects = [
                    Subject(name="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", description="–ê–ª–≥–µ–±—Ä–∞ –∏ –≥–µ–æ–º–µ—Ç—Ä–∏—è"),
                    Subject(name="–§–∏–∑–∏–∫–∞", description="–ú–µ—Ö–∞–Ω–∏–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ"),
                    Subject(name="–•–∏–º–∏—è", description="–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è –∏ –Ω–µ–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è —Ö–∏–º–∏—è"),
                    Subject(name="–ë–∏–æ–ª–æ–≥–∏—è", description="–ê–Ω–∞—Ç–æ–º–∏—è –∏ —ç–∫–æ–ª–æ–≥–∏—è"),
                    Subject(name="–ò—Å—Ç–æ—Ä–∏—è", description="–†–æ—Å—Å–∏–π—Å–∫–∞—è –∏ –≤—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è"),
                    Subject(name="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", description="–§–∏–∑–∏—á–µ—Å–∫–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—è"),
                    Subject(name="–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", description="–†—É—Å—Å–∫–∞—è –∏ –∑–∞—Ä—É–±–µ–∂–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"),
                    Subject(name="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", description="–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã"),
                ]
                
                Subject.objects.bulk_create(subjects)
                self.stdout.write(self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(subjects)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤'))
            
            return True
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {e}'))
            return False
