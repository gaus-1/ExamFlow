"""
–ü—Ä–æ—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
"""

from django.core.management.base import BaseCommand
from learning.models import Subject, Topic
import logging

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞'

    def handle(self, *args, **options):
        self.stdout.write('–°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞...')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
        subjects_data = [
            {
                'name': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è)',
                'code': 'math_prof',
                'exam_type': '–ï–ì–≠',
                'description': '–ü—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ï–ì–≠ - –∑–∞–¥–∞–Ω–∏—è 1-19',
                'icon': 'üìê',
                'is_primary': True
            },
            {
                'name': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–Ω–µ–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è)',
                'code': 'math_base',
                'exam_type': '–ï–ì–≠',
                'description': '–ë–∞–∑–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ï–ì–≠ - –∑–∞–¥–∞–Ω–∏—è 1-20',
                'icon': 'üìä',
                'is_primary': True
            },
            {
                'name': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–û–ì–≠)',
                'code': 'math_oge',
                'exam_type': '–û–ì–≠',
                'description': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –û–ì–≠ - –∑–∞–¥–∞–Ω–∏—è 1-26',
                'icon': 'üî¢',
                'is_primary': True
            },
            {
                'name': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–ï–ì–≠)',
                'code': 'russian_ege',
                'exam_type': '–ï–ì–≠',
                'description': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –ï–ì–≠ - —Å–æ—á–∏–Ω–µ–Ω–∏–µ, —Ç–µ—Å—Ç—ã, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞',
                'icon': 'üìù',
                'is_primary': True
            },
            {
                'name': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–û–ì–≠)',
                'code': 'russian_oge',
                'exam_type': '–û–ì–≠',
                'description': '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –û–ì–≠ - –∏–∑–ª–æ–∂–µ–Ω–∏–µ, —Å–æ—á–∏–Ω–µ–Ω–∏–µ, —Ç–µ—Å—Ç—ã',
                'icon': 'üìñ',
                'is_primary': True
            },
        ]
        
        created_count = 0
        
        for subject_data in subjects_data:
            subject, created = Subject.objects.get_or_create(
                name=subject_data['name'],
                defaults=subject_data
            )
            
            if created:
                created_count += 1
                self.stdout.write(f'  ‚úì –°–æ–∑–¥–∞–Ω –ø—Ä–µ–¥–º–µ—Ç: {subject.name}')
            else:
                self.stdout.write(f'  - –ü—Ä–µ–¥–º–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {subject.name}')
        
        # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        unused_subjects = [
            '–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è', '–ë–∏–æ–ª–æ–≥–∏—è', '–ò—Å—Ç–æ—Ä–∏—è', '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è',
            '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ',
            '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', '–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫', '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫', '–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫'
        ]
        
        archived_count = 0
        for subject_name in unused_subjects:
            updated = Subject.objects.filter(name=subject_name).update(is_archived=True)
            if updated:
                archived_count += 1
        
        self.stdout.write(f'  ‚úì –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {archived_count}')
        self.stdout.write(f'  ‚úì –°–æ–∑–¥–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {created_count}')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_subjects = Subject.objects.count()
        primary_subjects = Subject.objects.filter(is_primary=True).count()
        archived_subjects = Subject.objects.filter(is_archived=True).count()
        
        self.stdout.write(f'\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
        self.stdout.write(f'  –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {total_subjects}')
        self.stdout.write(f'  –û—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {primary_subjects}')
        self.stdout.write(f'  –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {archived_subjects}')
        
        self.stdout.write(
            self.style.SUCCESS('\n–ü—Ä–µ–¥–º–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!')
        )
