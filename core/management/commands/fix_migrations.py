from django.core.management.base import BaseCommand
from django.db import connection
from django.db.utils import OperationalError
from django.core.management import call_command

class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã'

    def handle(self, *args, **options):
        self.stdout.write('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ô EXAMFLOW')
        self.stdout.write('=' * 50)
        
        try:
            # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            self.stdout.write('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...')
            with connection.cursor() as cursor:
                cursor.execute("SELECT 1")
            self.stdout.write(self.style.SUCCESS('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞'))  # type: ignore
            
            # –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤—Ä—É—á–Ω—É—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            self.stdout.write('üîÑ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤—Ä—É—á–Ω—É—é...')
            self.create_tables_manually()
            
            # –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
            self.stdout.write('üì¶ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...')
            call_command('migrate', '--fake-initial')
            
            # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            self.stdout.write('‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π...')
            call_command('showmigrations')
            self.stdout.write('=' * 50)
            self.stdout.write(self.style.SUCCESS('üéâ –ú–ò–ì–†–ê–¶–ò–ò –ò–°–ü–†–ê–í–õ–ï–ù–´!'))  # type: ignore
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {e}'))  # type: ignore

    def create_tables_manually(self):
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Ä—É—á–Ω—É—é"""
        with connection.cursor() as cursor:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É learning_subject –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            try:
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS learning_subject (
                        id SERIAL PRIMARY KEY,
                        name VARCHAR(100) NOT NULL,
                        description TEXT,
                        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
                    );
                """)
                self.stdout.write('‚úÖ –¢–∞–±–ª–∏—Ü–∞ learning_subject —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞')
            except Exception as e:
                self.stdout.write(f'‚ö†Ô∏è learning_subject: {e}')
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É learning_task –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            try:
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS learning_task (
                        id SERIAL PRIMARY KEY,
                        title VARCHAR(200) NOT NULL,
                        content TEXT,
                        answer VARCHAR(500),
                        source VARCHAR(200),
                        difficulty INTEGER DEFAULT 1,
                        subject_id INTEGER REFERENCES learning_subject(id),
                        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
                    );
                """)
                self.stdout.write('‚úÖ –¢–∞–±–ª–∏—Ü–∞ learning_task —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞')
            except Exception as e:
                self.stdout.write(f'‚ö†Ô∏è learning_task: {e}')
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É authentication_userprofile –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            try:
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS authentication_userprofile (
                        id SERIAL PRIMARY KEY,
                        user_id INTEGER NOT NULL,
                        current_task_id INTEGER,
                        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
                    );
                """)
                self.stdout.write('‚úÖ –¢–∞–±–ª–∏—Ü–∞ authentication_userprofile —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞')
            except Exception as e:
                self.stdout.write(f'‚ö†Ô∏è authentication_userprofile: {e}')
