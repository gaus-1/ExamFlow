"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

from django.core.management.base import BaseCommand
import logging

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling'

    def add_arguments(self, parser):
        parser.add_argument(
            '--daemon',
            action='store_true',
            help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ'
        )

    def handle(self, *args, **options):
        self.stdout.write('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ ExamFlow –≤ —Ä–µ–∂–∏–º–µ polling...')

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            from django.conf import settings
            token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)
            if not token:
                self.stdout.write('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!')
                self.stdout.write(
                    '   –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ Environment Variables')
                return

            # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            from telegram_bot.bot_main import setup_bot_application

            self.stdout.write('üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞...')
            application = setup_bot_application()

            self.stdout.write('üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ polling...')
            self.stdout.write('üìù –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏')

            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            application.run_polling(
                allowed_updates=["message", "callback_query"],
                drop_pending_updates=True
            )

        except KeyboardInterrupt:
            self.stdout.write('\n‚ö†Ô∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
        except Exception:
            self.stdout.write('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}')
            logger.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}')
