"""
–ö–æ–º–∞–Ω–¥–∞ Django –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π keep-alive
"""

from django.core.management.base import BaseCommand
from core.keepalive import start_keepalive, stop_keepalive, keepalive_service
import signal
import sys
import time


class Command(BaseCommand):
    help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞'

    def add_arguments(self, parser):
        parser.add_argument(
            'action',
            choices=['start', 'stop', 'status'],
            help='–î–µ–π—Å—Ç–≤–∏–µ: start, stop –∏–ª–∏ status',
        )
        parser.add_argument(
            '--daemon',
            action='store_true',
            help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ',
        )

    def handle(self, *args, **options):
        action = options['action']
        
        if action == 'start':
            self.start_service(options.get('daemon', False))
        elif action == 'stop':
            self.stop_service()
        elif action == 'status':
            self.show_status()

    def start_service(self, daemon=False):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç keep-alive —Å–ª—É–∂–±—É"""
        self.stdout.write(
            self.style.SUCCESS('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...')
        )
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        def signal_handler(signum, frame):
            self.stdout.write(
                self.style.WARNING('\n‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É–∂–±—É...')
            )
            stop_keepalive()
            sys.exit(0)
        
        signal.signal(signal.SIGINT, signal_handler)
        signal.signal(signal.SIGTERM, signal_handler)
        
        try:
            start_keepalive()
            
            self.stdout.write(
                self.style.SUCCESS('‚úÖ Keep-alive —Å–ª—É–∂–±–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
            )
            self.stdout.write(
                self.style.SUCCESS('üîÑ –°–∞–π—Ç –±—É–¥–µ—Ç –ø–∏–Ω–≥–æ–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç')
            )
            self.stdout.write(
                self.style.WARNING('üìù –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏')
            )
            
            if daemon:
                # –í –¥–µ–º–æ–Ω-—Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –¥–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å
                while keepalive_service.is_running:
                    time.sleep(60)
            else:
                # –í –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
                self.run_interactive_mode()
                
        except KeyboardInterrupt:
            self.stdout.write(
                self.style.WARNING('\n‚ö†Ô∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
            )
            stop_keepalive()
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {str(e)}')
            )

    def stop_service(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç keep-alive —Å–ª—É–∂–±—É"""
        self.stdout.write('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ keep-alive —Å–ª—É–∂–±—ã...')
        stop_keepalive()
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –°–ª—É–∂–±–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
        )

    def show_status(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã"""
        if keepalive_service.is_running:
            self.stdout.write(
                self.style.SUCCESS('üü¢ Keep-alive —Å–ª—É–∂–±–∞ –∞–∫—Ç–∏–≤–Ω–∞')
            )
            self.stdout.write(f'üåê URL: {keepalive_service.site_url}')
            self.stdout.write(f'‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {keepalive_service.ping_interval} –º–∏–Ω—É—Ç')
        else:
            self.stdout.write(
                self.style.WARNING('üî¥ Keep-alive —Å–ª—É–∂–±–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
            )

    def run_interactive_mode(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞"""
        try:
            while keepalive_service.is_running:
                # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω (–¥–ª—è Unix-—Å–∏—Å—Ç–µ–º)
                # print('\033[2J\033[H', end='')
                
                self.stdout.write('\n' + '='*50)
                self.stdout.write('ü§ñ ExamFlow Keep-Alive Service')
                self.stdout.write('='*50)
                self.stdout.write(f'üåê URL: {keepalive_service.site_url}')
                self.stdout.write(f'‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {keepalive_service.ping_interval} –º–∏–Ω—É—Ç')
                self.stdout.write(f'üü¢ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω')
                self.stdout.write('üìù –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏')
                self.stdout.write('='*50)
                
                # –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
                time.sleep(30)
                
        except KeyboardInterrupt:
            pass
