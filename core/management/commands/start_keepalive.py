"""
–ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö keep-alive –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç "–∑–∞—Å—ã–ø–∞–Ω–∏–µ" –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–∞–π—Ç–∞ –Ω–∞ Render
"""

import subprocess
import time
import logging
from django.core.management.base import BaseCommand
from django.core.management import call_command

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ keep-alive –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è "–∑–∞—Å—ã–ø–∞–Ω–∏—è"'

    def add_arguments(self, parser):
        parser.add_argument(
            '--db-interval',
            type=int,
            default=300,  # 5 –º–∏–Ω—É—Ç –¥–ª—è –±–∞–∑—ã
            help='–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 300 = 5 –º–∏–Ω—É—Ç)'
        )
        parser.add_argument(
            '--site-interval',
            type=int,
            default=600,  # 10 –º–∏–Ω—É—Ç –¥–ª—è —Å–∞–π—Ç–∞
            help='–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∞–π—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 600 = 10 –º–∏–Ω—É—Ç)'
        )
        parser.add_argument(
            '--daemon',
            action='store_true',
            help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (daemon)'
        )

    def handle(self, *args, **options):
        db_interval = options['db_interval']
        site_interval = options['site_interval']
        daemon = options['daemon']

        self.stdout.write('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã keep-alive –¥–ª—è ExamFlow')
        self.stdout.write('=' * 50)
        self.stdout.write(
            f'üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –∫–∞–∂–¥—ã–µ {db_interval} —Å–µ–∫—É–Ω–¥ ({db_interval//60} –º–∏–Ω—É—Ç)')
        self.stdout.write(
            f'üåê –°–∞–π—Ç: –∫–∞–∂–¥—ã–µ {site_interval} —Å–µ–∫—É–Ω–¥ ({site_interval//60} –º–∏–Ω—É—Ç)')
        self.stdout.write('=' * 50)

        if daemon:
            self.stdout.write('üîÑ –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...')

            # –ó–∞–ø—É—Å–∫–∞–µ–º keep-alive –±–∞–∑—ã –≤ —Ñ–æ–Ω–µ
            db_process = subprocess.Popen([
                'python', 'manage.py', 'keep_db_alive',
                '--continuous', '--interval', str(db_interval)
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

            # –ó–∞–ø—É—Å–∫–∞–µ–º keep-alive —Å–∞–π—Ç–∞ –≤ —Ñ–æ–Ω–µ
            site_process = subprocess.Popen([
                'python', 'manage.py', 'keep_site_alive',
                '--continuous', '--interval', str(site_interval)
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

            self.stdout.write('‚úÖ Keep-alive –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–µ:')
            self.stdout.write(f'   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PID {db_process.pid}')
            self.stdout.write(f'   –°–∞–π—Ç: PID {site_process.pid}')
            self.stdout.write('')
            self.stdout.write('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:')
            self.stdout.write(f'   kill {db_process.pid}  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å keep-alive –±–∞–∑—ã')
            self.stdout.write(
                f'   kill {site_process.pid}  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å keep-alive —Å–∞–π—Ç–∞')

        else:
            self.stdout.write('üîÑ –ó–∞–ø—É—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ...')
            self.stdout.write('–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏')

            try:
                while True:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    self.stdout.write('üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...')
                    call_command('keep_db_alive', '--interval', '1')

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç
                    self.stdout.write('üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç...')
                    call_command('keep_site_alive', '--interval', '1')

                    # –ñ–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                    wait_time = min(db_interval, site_interval)
                    self.stdout.write(
                        f'‚è∞ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ {wait_time} —Å–µ–∫—É–Ω–¥...')
                    time.sleep(wait_time)

            except KeyboardInterrupt:
                self.stdout.write('')
                self.stdout.write('üõë Keep-alive –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')

        self.stdout.write('üèÅ –°–∏—Å—Ç–µ–º–∞ keep-alive –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
