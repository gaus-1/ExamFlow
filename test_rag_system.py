#!/usr/bin/env python3
"""
–¢–µ—Å—Ç RAG —Å–∏—Å—Ç–µ–º—ã ExamFlow —Å Gemini API
"""

import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º RAG —Å–∏—Å—Ç–µ–º—É ExamFlow...")

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'examflow_project.settings')
    
    import django
    django.setup()
    
    print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º AI —Å–µ—Ä–≤–∏—Å
    from ai.services import AiService
    
    print("‚úÖ AI —Å–µ—Ä–≤–∏—Å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    ai_service = AiService()
    
    print("‚úÖ AI —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
    providers = ai_service.providers
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: {len(providers)}")
    
    for provider in providers:
        print(f"   - {provider.name}: {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if provider.is_available() else '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å...")
    
    result = ai_service.ask("–û–±—ä—è—Å–Ω–∏, —á—Ç–æ —Ç–∞–∫–æ–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ", task_type='task_explanation')
    
    if 'error' in result:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
    else:
        print("‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"ü§ñ –û—Ç–≤–µ—Ç: {result['response'][:200]}...")
        print(f"üìä –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {result['provider']}")
        print(f"üî¢ –¢–æ–∫–µ–Ω—ã: {result['tokens_used']}")
    
    print("\nüéØ RAG —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ RAG —Å–∏—Å—Ç–µ–º—ã: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "="*50)
print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê RAG –°–ò–°–¢–ï–ú–´:")
print("="*50)
