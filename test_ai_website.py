#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI API –Ω–∞ –≤–µ–±-—Å–∞–π—Ç–µ ExamFlow
"""

import requests
import json
import time

def test_ai_website():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç AI API –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI –ù–ê –í–ï–ë-–°–ê–ô–¢–ï")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    test_questions = [
        "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
        "–û–±—ä—è—Å–Ω–∏ —Ç–µ–æ—Ä–µ–º—É –ü–∏—Ñ–∞–≥–æ—Ä–∞",
        "–ü–æ–º–æ–≥–∏ —Ä–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ x¬≤ + 5x + 6 = 0",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è?",
        "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ"
    ]
    
    base_url = "http://localhost:8000"
    ai_endpoint = f"{base_url}/ai/api/"
    
    print(f"üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º: {ai_endpoint}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get(base_url, timeout=5)
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º AI API
    success_count = 0
    total_time = 0
    
    for i, question in enumerate(test_questions, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}/5: {question[:30]}...")
        
        try:
            start_time = time.time()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
            response = requests.post(
                ai_endpoint,
                json={"prompt": question},
                headers={"Content-Type": "application/json"},
                timeout=30
            )
            
            end_time = time.time()
            request_time = end_time - start_time
            total_time += request_time
            
            print(f"   üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {request_time:.2f}—Å")
            
            if response.status_code == 200:
                data = response.json()
                answer = data.get('answer', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')
                print(f"   ü§ñ –û—Ç–≤–µ—Ç AI: {answer[:100]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                if 'answer' in data:
                    print("   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
                    success_count += 1
                else:
                    print("   ‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:200]}")
                
        except requests.exceptions.Timeout:
            print("   ‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (>30—Å)")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {success_count}/{len(test_questions)}")
    print(f"   ‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {total_time/len(test_questions):.2f}—Å")
    
    if success_count == len(test_questions):
        print("   üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
    elif success_count > len(test_questions) // 2:
        print("   ‚ö†Ô∏è –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    else:
        print("   üö® –ú–ù–û–ì–û –û–®–ò–ë–û–ö - –¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")

if __name__ == "__main__":
    test_ai_website()
