"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π AI API - —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
"""

import json
import logging
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
import google.generativeai as genai
from django.conf import settings

logger = logging.getLogger(__name__)

@csrf_exempt
@require_http_methods(["POST"])
def emergency_ai_api(request):
    """
    –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π AI API - –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gemini
    –†–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –ë–ï–ó Container, –ë–ï–ó —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    """
    try:
        logger.info("üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô AI API –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        data = json.loads(request.body)
        prompt = data.get('prompt', '').strip()
        
        if not prompt:
            return JsonResponse({
                'answer': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å',
                'sources': []
            })
        
        if len(prompt) > 1000:
            return JsonResponse({
                'answer': '–í–æ–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤.',
                'sources': []
            })
        
        # –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gemini
        api_key = getattr(settings, 'GEMINI_API_KEY', '')
        if not api_key:
            return JsonResponse({
                'answer': '–°–µ—Ä–≤–∏—Å –ò–ò –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
                'sources': [
                    {'title': '–§–ò–ü–ò - –†—É—Å—Å–∫–∏–π —è–∑—ã–∫', 'url': 'https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-1'},
                    {'title': '–§–ò–ü–ò - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'url': 'https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-4'}
                ]
            })
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Gemini
        genai.configure(api_key=api_key)  # type: ignore
        model = genai.GenerativeModel('gemini-1.5-flash')  # type: ignore
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç —Å —Ä–æ–ª—å—é
        system_prompt = """–¢—ã - ExamFlow AI, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –∏ –û–ì–≠.

–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è –Ω–∞:
üìê –ú–∞—Ç–µ–º–∞—Ç–∏–∫–µ (–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –∏ –±–∞–∑–æ–≤–∞—è, –û–ì–≠) 
üìù –†—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ (–ï–ì–≠ –∏ –û–ì–≠)

–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π
- –ò–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π —É–º–µ—Å—Ç–Ω—ã–µ —à—É—Ç–∫–∏
- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–π—Å—è –∫–∞–∫ "ExamFlow AI"
- –ü–æ–º–æ–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
- –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–≤–æ–∏–º –ø—Ä–µ–¥–º–µ—Ç–∞–º - –≤–µ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –∏–ª–∏ —Ä—É—Å—Å–∫–∏–π

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É, –º–∞–∫—Å–∏–º—É–º 300 —Å–ª–æ–≤."""

        full_prompt = f"{system_prompt}\n\n–í–æ–ø—Ä–æ—Å —Å—Ç—É–¥–µ–Ω—Ç–∞: {prompt}"
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
        response = model.generate_content(full_prompt)
        
        if response.text:
            answer = response.text.strip()
            
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞
            if len(answer) > 1500:
                answer = answer[:1500] + "..."
            
            logger.info(f"‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π AI –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {answer[:50]}...")
            
            return JsonResponse({
                'answer': answer,
                'sources': [
                    {'title': '–§–ò–ü–ò - –†—É—Å—Å–∫–∏–π —è–∑—ã–∫', 'url': 'https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-1'},
                    {'title': '–§–ò–ü–ò - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'url': 'https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-4'}
                ]
            })
        else:
            return JsonResponse({
                'answer': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å.',
                'sources': []
            })
            
    except json.JSONDecodeError:
        return JsonResponse({
            'answer': '–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞',
            'sources': []
        })
    except Exception as e:
        logger.error(f"–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π AI API –æ—à–∏–±–∫–∞: {e}")
        return JsonResponse({
            'answer': '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –§–ò–ü–ò.',
            'sources': [
                {'title': '–§–ò–ü–ò - –†—É—Å—Å–∫–∏–π —è–∑—ã–∫', 'url': 'https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-1'},
                {'title': '–§–ò–ü–ò - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'url': 'https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-4'},
                {'title': '–†–µ—à—É –ï–ì–≠ - –†—É—Å—Å–∫–∏–π', 'url': 'https://rus-ege.sdamgia.ru/'},
                {'title': '–†–µ—à—É –ï–ì–≠ - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'url': 'https://ege.sdamgia.ru/'}
            ]
        })
