#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è ExamFlow –Ω–∞ Render
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'examflow_project.settings')
django.setup()

from django.core.management import execute_from_command_line
from django.db import connection
from django.db.utils import OperationalError

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
            return True
    except OperationalError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def apply_migrations():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏"""
    try:
        print("üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...")
        execute_from_command_line(['manage.py', 'migrate'])
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
        return False

def check_tables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü"""
    try:
        from learning.models import Subject, Task
        from authentication.models import UserProfile
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        subject_count = Subject.objects.count()
        task_count = Task.objects.count()
        
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ Subject: {subject_count} –∑–∞–ø–∏—Å–µ–π")
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ Task: {task_count} –∑–∞–ø–∏—Å–µ–π")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü: {e}")
        return False

def create_sample_data():
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã–µ"""
    try:
        from learning.models import Subject, Topic, Task
        
        if Subject.objects.count() == 0:
            print("üìö –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤...")
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
            subjects = [
                Subject(name="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", description="–ê–ª–≥–µ–±—Ä–∞ –∏ –≥–µ–æ–º–µ—Ç—Ä–∏—è"),
                Subject(name="–§–∏–∑–∏–∫–∞", description="–ú–µ—Ö–∞–Ω–∏–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ"),
                Subject(name="–•–∏–º–∏—è", description="–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è –∏ –Ω–µ–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è —Ö–∏–º–∏—è"),
                Subject(name="–ë–∏–æ–ª–æ–≥–∏—è", description="–ê–Ω–∞—Ç–æ–º–∏—è –∏ —ç–∫–æ–ª–æ–≥–∏—è"),
                Subject(name="–ò—Å—Ç–æ—Ä–∏—è", description="–†–æ—Å—Å–∏–π—Å–∫–∞—è –∏ –≤—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è"),
                Subject(name="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", description="–§–∏–∑–∏—á–µ—Å–∫–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—è"),
                Subject(name="–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", description="–†—É—Å—Å–∫–∞—è –∏ –∑–∞—Ä—É–±–µ–∂–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"),
                Subject(name="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", description="–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã"),
            ]
            
            Subject.objects.bulk_create(subjects)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(subjects)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –î–ï–ü–õ–û–ô EXAMFLOW –ù–ê RENDER")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not check_database():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return False
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    if not apply_migrations():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    if not check_tables():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö
    create_sample_data()
    
    print("=" * 50)
    print("üéâ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    print("‚úÖ –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
