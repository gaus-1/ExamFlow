#!/usr/bin/env python
"""
–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –ò–ò –º–æ–¥—É–ª—è ExamFlow
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'examflow_project.settings')
django.setup()

def test_ai_module():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ò–ò –º–æ–¥—É–ª—å"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –º–æ–¥—É–ª—è ExamFlow...")
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
        print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π –ò–ò...")
        from ai.models import AiRequest, AiLimit, AiProvider, AiResponse
        print("   ‚úÖ –ú–æ–¥–µ–ª–∏ –ò–ò –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç views
        print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ views –ò–ò...")
        from ai import views
        print("   ‚úÖ Views –ò–ò –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç services
        print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ services –ò–ò...")
        from ai import services
        print("   ‚úÖ Services –ò–ò –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º URL'—ã
        print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL'–æ–≤ –ò–ò...")
        from django.urls import reverse
        try:
            chat_url = reverse('ai:chat')
            print(f"   ‚úÖ URL —á–∞—Ç–∞: {chat_url}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ URL —á–∞—Ç–∞: {e}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
        print("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –ò–ò...")
        from django.template.loader import get_template
        try:
            chat_template = get_template('ai/chat.html')
            print("   ‚úÖ –®–∞–±–ª–æ–Ω —á–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —à–∞–±–ª–æ–Ω–∞ —á–∞—Ç–∞: {e}")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        print("6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...")
        from django.db import connection
        try:
            with connection.cursor() as cursor:
                cursor.execute("SELECT 1")
                print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –ò–ò –≤ –ë–î
        print("7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –ò–ò –≤ –ë–î...")
        try:
            with connection.cursor() as cursor:
                cursor.execute("""
                    SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_name LIKE 'ai_%'
                """)
                tables = cursor.fetchall()
                if tables:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã –ò–ò: {[t[0] for t in tables]}")
                else:
                    print("   ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—ã –ò–ò –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏)")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –º–æ–¥—É–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if not tables:
            print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("1. –°–æ–∑–¥–∞–π—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py makemigrations ai")
            print("2. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py migrate")
            print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_ai_module()
