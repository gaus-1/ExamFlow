/**
 * üé® –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –∏ –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è ExamFlow
 * 
 * –§—É–Ω–∫—Ü–∏–∏:
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
 * - –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–µ
 * - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

class ThemeManager {
    constructor() {
        this.currentTheme = 'light';
        this.currentTime = 'afternoon';
        this.userPreference = null;
        this.autoTheme = true;
        
        this.init();
    }
    
    init() {
        this.loadUserPreferences();
        this.detectSystemTheme();
        this.detectTimeOfDay();
        this.setupEventListeners();
        this.initScrollAnimations();
        this.applyTheme();
        this.updateThemeButton();
        
        console.log('üé® ThemeManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
     */
    loadUserPreferences() {
        try {
            const saved = localStorage.getItem('examflow-theme');
            if (saved) {
                const prefs = JSON.parse(saved);
                this.userPreference = prefs.theme;
                this.autoTheme = prefs.autoTheme !== false;
            }
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã:', e);
        }
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    saveUserPreferences() {
        try {
            const prefs = {
                theme: this.currentTheme,
                autoTheme: this.autoTheme,
                timestamp: Date.now()
            };
            localStorage.setItem('examflow-theme', JSON.stringify(prefs));
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã:', e);
        }
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É (—Å–≤–µ—Ç–ª–∞—è/—Ç–µ–º–Ω–∞—è)
     */
    detectSystemTheme() {
        if (window.matchMedia) {
            const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
            this.systemTheme = mediaQuery.matches ? 'dark' : 'light';
            
            // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
            mediaQuery.addEventListener('change', (e) => {
                this.systemTheme = e.matches ? 'dark' : 'light';
                if (this.autoTheme) {
                    this.applyTheme();
                }
            });
        }
    }
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Ä–µ–º—è —Å—É—Ç–æ–∫
     */
    detectTimeOfDay() {
        const hour = new Date().getHours();
        
        if (hour >= 6 && hour < 12) {
            this.currentTime = 'morning';
        } else if (hour >= 12 && hour < 18) {
            this.currentTime = 'afternoon';
        } else if (hour >= 18 && hour < 22) {
            this.currentTime = 'evening';
        } else {
            this.currentTime = 'night';
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        setInterval(() => {
            this.detectTimeOfDay();
            if (this.autoTheme) {
                this.applyTheme();
            }
        }, 60000);
    }
    
    /**
     * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
     */
    applyTheme() {
        const root = document.documentElement;
        
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã
        root.removeAttribute('data-theme');
        root.removeAttribute('data-time');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—É—é
        if (this.userPreference && !this.autoTheme) {
            this.currentTheme = this.userPreference;
        } else if (this.autoTheme) {
            this.currentTheme = this.systemTheme || 'light';
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
        root.setAttribute('data-theme', this.currentTheme);
        root.setAttribute('data-time', this.currentTime);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏
        this.updateMetaTags();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.saveUserPreferences();
        
        console.log(`üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞: ${this.currentTheme}, –≤—Ä–µ–º—è: ${this.currentTime}`);
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è PWA
     */
    updateMetaTags() {
        const themeColor = getComputedStyle(document.documentElement)
            .getPropertyValue('--primary-bg')
            .trim();
        
        let metaTheme = document.querySelector('meta[name="theme-color"]');
        if (!metaTheme) {
            metaTheme = document.createElement('meta');
            metaTheme.name = 'theme-color';
            document.head.appendChild(metaTheme);
        }
        metaTheme.content = themeColor;
    }
    
    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ç–µ–º—É –≤—Ä—É—á–Ω—É—é
     */
    toggleTheme() {
        this.autoTheme = false;
        this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        this.applyTheme();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showThemeNotification();
    }
    
    /**
     * –í–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–º—ã
     */
    enableAutoTheme() {
        this.autoTheme = true;
        this.applyTheme();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–º–∞ –≤–∫–ª—é—á–µ–Ω–∞', 'info');
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —Ç–µ–º—ã
     */
    showThemeNotification() {
        const themeName = this.currentTheme === 'light' ? '—Å–≤–µ—Ç–ª—É—é' : '—Ç–µ–º–Ω—É—é';
        this.showNotification(`–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ ${themeName} —Ç–µ–º—É`, 'success');
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = document.createElement('div');
        notification.className = `theme-notification theme-notification-${type}`;
        notification.innerHTML = `
            <div class="notification-content">
                <span class="notification-icon">${this.getNotificationIcon(type)}</span>
                <span class="notification-text">${message}</span>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--card-bg);
            color: var(--primary-text);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 12px 16px;
            box-shadow: 0 4px 20px var(--shadow-color);
            z-index: 10000;
            transform: translateX(100%);
            transition: transform 0.3s var(--transition-timing);
            max-width: 300px;
        `;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    getNotificationIcon(type) {
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è'
        };
        return icons[type] || icons.info;
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
            themeToggle.addEventListener('click', () => {
                this.toggleTheme();
                this.updateThemeButton();
            });
        }
        
        // –°–ª—É—à–∞–µ–º –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        document.addEventListener('keydown', (e) => {
            // Ctrl/Cmd + T –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
            if ((e.ctrlKey || e.metaKey) && e.key === 't') {
                e.preventDefault();
                this.toggleTheme();
                this.updateThemeButton();
            }
            
            // Ctrl/Cmd + A –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ç–µ–º—ã
            if ((e.ctrlKey || e.metaKey) && e.key === 'a') {
                e.preventDefault();
                this.enableAutoTheme();
            }
        });
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('visibilitychange', () => {
            if (!document.hidden) {
                this.detectTimeOfDay();
                if (this.autoTheme) {
                    this.applyTheme();
                }
            }
        });
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã
     */
    updateThemeButton() {
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
            const icon = this.currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
            const title = this.currentTheme === 'dark' ? '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É (Ctrl+T)' : '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É (Ctrl+T)';
            
            themeToggle.textContent = icon;
            themeToggle.title = title;
            themeToggle.setAttribute('data-theme', this.currentTheme);
        }
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–µ
     */
    initScrollAnimations() {
        this.observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('revealed');
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
                    if (entry.target.classList.contains('heading-animate')) {
                        this.animateHeading(entry.target);
                    }
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                    if (entry.target.classList.contains('stat-counter')) {
                        this.animateStatCounter(entry.target);
                    }
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
                    if (entry.target.classList.contains('progress-bar')) {
                        this.animateProgressBar(entry.target);
                    }
                }
            });
        }, {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        });
        
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        this.observeElements();
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è DOM
        this.setupMutationObserver();
    }
    
    /**
     * –ù–∞–±–ª—é–¥–∞–µ—Ç –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
     */
    observeElements() {
        const elements = document.querySelectorAll(`
            .text-reveal,
            .heading-animate,
            .stat-counter,
            .progress-bar,
            .card-hover
        `);
        
        elements.forEach(el => {
            this.observer.observe(el);
        });
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
     */
    setupMutationObserver() {
        const observer = new MutationObserver((mutations) => {
            let shouldReobserve = false;
            
            mutations.forEach(mutation => {
                if (mutation.type === 'childList') {
                    shouldReobserve = true;
                }
            });
            
            if (shouldReobserve) {
                setTimeout(() => {
                    this.observeElements();
                }, 100);
            }
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    }
    
    /**
     * –ê–Ω–∏–º–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ –±—É–∫–≤–∞–º
     */
    animateHeading(heading) {
        const text = heading.textContent;
        const letters = text.split('').map(letter => {
            const span = document.createElement('span');
            span.className = 'letter-animate';
            span.textContent = letter === ' ' ? '\u00A0' : letter;
            span.style.animationDelay = `${Math.random() * 0.5}s`;
            return span;
        });
        
        heading.innerHTML = '';
        letters.forEach(span => heading.appendChild(span));
    }
    
    /**
     * –ê–Ω–∏–º–∏—Ä—É–µ—Ç —Å—á–µ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    animateStatCounter(counter) {
        const target = parseInt(counter.textContent) || 0;
        const duration = 2000;
        const step = target / (duration / 16);
        let current = 0;
        
        const timer = setInterval(() => {
            current += step;
            if (current >= target) {
                current = target;
                clearInterval(timer);
            }
            counter.textContent = Math.floor(current);
        }, 16);
    }
    
    /**
     * –ê–Ω–∏–º–∏—Ä—É–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
     */
    animateProgressBar(progressBar) {
        const width = progressBar.getAttribute('data-progress') || '0';
        progressBar.style.setProperty('--progress-width', width + '%');
        progressBar.classList.add('animate');
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–º–µ
     */
    getThemeInfo() {
        return {
            currentTheme: this.currentTheme,
            currentTime: this.currentTime,
            systemTheme: this.systemTheme,
            userPreference: this.userPreference,
            autoTheme: this.autoTheme
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    window.themeManager = new ThemeManager();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ThemeManager;
}
