"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook Telegram –±–æ—Ç–∞
"""

import logging

import requests
from django.conf import settings
from django.core.management.base import BaseCommand

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook –¥–ª—è Telegram –±–æ—Ç–∞"

    def add_arguments(self, parser):
        parser.add_argument("--delete", action="store_true", help="–£–¥–∞–ª–∏—Ç—å webhook")
        parser.add_argument("--url", type=str, help="–ö–∞—Å—Ç–æ–º–Ω—ã–π URL –¥–ª—è webhook")

    def handle(self, *args, **options):
        token = getattr(settings, "TELEGRAM_BOT_TOKEN", "")

        if not token:
            self.stdout.write(self.style.ERROR("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"))  # type: ignore
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL
        if options.get("delete"):
            webhook_url = ""
            self.stdout.write("üóëÔ∏è –£–¥–∞–ª—è–µ–º webhook...")
        elif options.get("url"):
            webhook_url = options["url"]
        else:
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL
            site_url = getattr(settings, "SITE_URL", "https://examflow.ru")
            if "localhost" in site_url or "127.0.0.1" in site_url:
                # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - —É–¥–∞–ª—è–µ–º webhook
                webhook_url = ""
                self.stdout.write(
                    "üè† –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º webhook –¥–ª—è polling —Ä–µ–∂–∏–º–∞"
                )
            else:
                webhook_url = f"{site_url}/bot/webhook/"

        self.stdout.write(f"üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {webhook_url}")

        try:
            response = requests.post(
                f"https://api.telegram.org/bot{token}/setWebhook",
                json={"url": webhook_url},
                timeout=30,
            )

            if response.status_code == 200:
                data = response.json()
                if data.get("ok"):
                    self.stdout.write(self.style.SUCCESS("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"))  # type: ignore
                    self.stdout.write(f"üìç URL: {webhook_url}")
                else:
                    self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {data.get("description")}'))  # type: ignore
            else:
                self.stdout.write(self.style.ERROR(f"‚ùå HTTP {response.status_code}: {response.text}"))  # type: ignore

        except Exception as e:
            self.stdout.write(self.style.ERROR(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}"))  # type: ignore
