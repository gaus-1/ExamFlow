"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Telegram –±–æ—Ç–∞

–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
"""

import hashlib
import hmac
import logging
import os

import django
from django.conf import settings
from telegram.ext import (
    Application,
    CallbackQueryHandler,
    CommandHandler,
    MessageHandler,
    filters,
)

from telegram_bot.bot_handlers import (
    achievements_handler,
    ai_explain_handler,
    ai_help_handler,
    ai_hint_general_handler,
    ai_personal_handler,
    bonus_handler,
    clear_context_handler,
    daily_challenges_handler,
    gamification_menu_handler,
    handle_text_message,
    handle_unknown_callback,
    leaderboard_handler,
    learning_plan_menu,
    overall_progress_handler,
    progress_handler,
    random_subject_handler,
    random_task,
    search_subject_handler,
    show_answer,
    show_stats,
    show_subject_topics,
    show_task_handler,
    start,
    subjects_progress_handler,
    user_stats_handler,
)
from telegram_bot.commands.ai import (
    ai_explain_handler,
    ai_help_handler,
    ai_hint_general_handler,
    ai_personal_handler,
    clear_context_handler,
    handle_text_message,
)
from telegram_bot.commands.auth import auth_success_handler, telegram_auth_handler
from telegram_bot.commands.gamification import (
    achievements_handler,
    bonus_handler,
    daily_challenges_handler,
    gamification_menu_handler,
    handle_unknown_callback,
    leaderboard_handler,
    overall_progress_handler,
    progress_handler,
    show_stats,
    subjects_progress_handler,
    user_stats_handler,
)
from telegram_bot.commands.main_menu import main_menu  # —Ç–æ–Ω–∫–∞—è –æ–±—ë—Ä—Ç–∫–∞
from telegram_bot.commands.subjects import subjects_menu
from telegram_bot.commands.tasks import (
    random_subject_handler,
    random_task,
    search_subject_handler,
    show_answer,
    show_subject_topics,
    show_task_handler,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "examflow_project.settings")
django.setup()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# üîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞


def validate_bot_token():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    """
    token = settings.TELEGRAM_BOT_TOKEN
    if not token or len(token) < 40:
        logger.error("–ù–ï–î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–´–ô –¢–û–ö–ï–ù –ë–û–¢–ê")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ Telegram
    if not token.count(":") == 1:
        logger.error("–ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢ –¢–û–ö–ï–ù–ê")
        return False

    logger.info("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –≤–∞–ª–∏–¥–µ–Ω")
    return True


# üîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook


def validate_webhook_secret(secret_token, request_body, signature):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å—å webhook –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    """
    if not secret_token:
        return False

    expected_signature = hmac.new(
        secret_token.encode("utf-8"), request_body, hashlib.sha256
    ).hexdigest()

    return hmac.compare_digest("sha256={expected_signature}", signature)


def get_bot():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ views
    """
    from telegram import Bot

    return Bot(settings.TELEGRAM_BOT_TOKEN)


def setup_bot_application():
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞

    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    """
    # üîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if not validate_bot_token():
        logger.error("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ - –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω!")
        return None

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
    application = Application.builder().token(settings.TELEGRAM_BOT_TOKEN).build()

    # üîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
    logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))  # type: ignore
    application.add_handler(CommandHandler("help", start))  # type: ignore

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    application.add_handler(CallbackQueryHandler(start, pattern="start"))
    application.add_handler(CallbackQueryHandler(subjects_menu, pattern="subjects"))
    application.add_handler(CallbackQueryHandler(show_stats, pattern="stats"))
    application.add_handler(CallbackQueryHandler(random_task, pattern="random_task"))
    application.add_handler(CallbackQueryHandler(main_menu, pattern="main_menu"))
    application.add_handler(
        CallbackQueryHandler(learning_plan_menu, pattern="learning_plan")
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —Ç–µ–º
    application.add_handler(
        CallbackQueryHandler(show_subject_topics, pattern=r"subject_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(show_subject_topics, pattern=r"topic_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(show_subject_topics, pattern=r"random_subject_\d+")
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–¥–∞–Ω–∏—è
    application.add_handler(
        CallbackQueryHandler(show_task_handler, pattern=r"show_task_\d+")
    )

    # –ù–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    application.add_handler(
        CallbackQueryHandler(search_subject_handler, pattern="search_subject")
    )
    application.add_handler(
        CallbackQueryHandler(random_subject_handler, pattern="random_subject")
    )

    # üîê –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    application.add_handler(
        CallbackQueryHandler(telegram_auth_handler, pattern="telegram_auth")
    )
    application.add_handler(
        CallbackQueryHandler(auth_success_handler, pattern="auth_success")
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ò–ò
    application.add_handler(CallbackQueryHandler(ai_help_handler, pattern=r"ai_help"))
    application.add_handler(
        CallbackQueryHandler(ai_help_handler, pattern=r"ai_help_\d+")
    )
    application.add_handler(CallbackQueryHandler(ai_help_handler, pattern=r"ai_chat"))
    application.add_handler(
        CallbackQueryHandler(ai_explain_handler, pattern=r"ai_explain")
    )
    application.add_handler(
        CallbackQueryHandler(ai_personal_handler, pattern=r"ai_personal")
    )
    application.add_handler(
        CallbackQueryHandler(ai_hint_general_handler, pattern=r"ai_hint")
    )
    application.add_handler(
        CallbackQueryHandler(clear_context_handler, pattern="clear_context")
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
    application.add_handler(CallbackQueryHandler(show_answer, pattern=r"answer_\d+"))

    # üéÆ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
    application.add_handler(
        CallbackQueryHandler(gamification_menu_handler, pattern=r"gamification_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(user_stats_handler, pattern=r"stats_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(achievements_handler, pattern=r"achievements_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(progress_handler, pattern=r"progress_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(overall_progress_handler, pattern=r"overall_progress_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(
            subjects_progress_handler, pattern=r"subjects_progress_\d+"
        )
    )
    application.add_handler(
        CallbackQueryHandler(daily_challenges_handler, pattern=r"daily_\d+")
    )
    application.add_handler(
        CallbackQueryHandler(leaderboard_handler, pattern="leaderboard")
    )
    application.add_handler(CallbackQueryHandler(bonus_handler, pattern=r"bonus_\d+"))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å –ò–ò –∏ –Ω–∏–∂–Ω–µ–≥–æ –º–µ–Ω—é)
    application.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message)
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    application.add_handler(CallbackQueryHandler(handle_unknown_callback))

    logger.info("Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    return application


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    application = setup_bot_application()

    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling")
    # –Ø–≤–Ω–æ —É–¥–∞–ª—è–µ–º webhook, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å 409 Conflict
    try:
        import asyncio

        asyncio.run(
            application.bot.delete_webhook(drop_pending_updates=True)  # type: ignore
        )  # type: ignore
    except Exception:
        pass
    # –°—Ç–∞—Ä—Ç—É–µ–º polling –∏ –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    application.run_polling(drop_pending_updates=True)  # type: ignore


if __name__ == "__main__":
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"""
    application = setup_bot_application()

    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling")
    # –Ø–≤–Ω–æ —É–¥–∞–ª—è–µ–º webhook, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å 409 Conflict
    try:
        import asyncio

        asyncio.run(
            application.bot.delete_webhook(drop_pending_updates=True)  # type: ignore
        )  # type: ignore
    except Exception:
        pass
    # –°—Ç–∞—Ä—Ç—É–µ–º polling –∏ –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    application.run_polling(drop_pending_updates=True)  # type: ignore
