#!/usr/bin/env python
"""
–°–±—Ä–æ—Å –ª–∏–º–∏—Ç–æ–≤ –ò–ò –∑–∞–ø—Ä–æ—Å–æ–≤
"""
import os
import sys
import django

def reset_ai_limits():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–∏–º–∏—Ç—ã –ò–ò –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print("üîÑ –°–±—Ä–æ—Å –ª–∏–º–∏—Ç–æ–≤ –ò–ò –∑–∞–ø—Ä–æ—Å–æ–≤...")
    
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'examflow_project.settings')
        django.setup()
        print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        from ai.models import AiLimit
        from django.utils import timezone
        from datetime import timedelta
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ª–∏–º–∏—Ç—ã
        limits = AiLimit.objects.all()
        for limit in limits:
            limit.current_usage = 0
            limit.reset_date = timezone.now() + timedelta(days=1)
            limit.save()
            print(f"üîÑ –°–±—Ä–æ—à–µ–Ω –ª–∏–º–∏—Ç –¥–ª—è {limit.user or '–≥–æ—Å—Ç—è'}: {limit.current_usage}/{limit.max_limit}")
        
        print(f"‚úÖ –°–±—Ä–æ—à–µ–Ω–æ –ª–∏–º–∏—Ç–æ–≤: {limits.count()}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = reset_ai_limits()
    if success:
        print("\nüéâ –õ–∏–º–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã!")
    else:
        print("\nüí• –°–±—Ä–æ—Å –ª–∏–º–∏—Ç–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è!")

